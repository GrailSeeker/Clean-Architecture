#pragma checksum "C:\Users\prdora\source\repos\StudenManagementDemo\Src\Presentation\SexyUI\Pages\Student.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "be34be2565cdc49e7565ccd5cf01999deb0d090b"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SexyUI.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\prdora\source\repos\StudenManagementDemo\Src\Presentation\SexyUI\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\prdora\source\repos\StudenManagementDemo\Src\Presentation\SexyUI\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\prdora\source\repos\StudenManagementDemo\Src\Presentation\SexyUI\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\prdora\source\repos\StudenManagementDemo\Src\Presentation\SexyUI\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\prdora\source\repos\StudenManagementDemo\Src\Presentation\SexyUI\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\prdora\source\repos\StudenManagementDemo\Src\Presentation\SexyUI\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\prdora\source\repos\StudenManagementDemo\Src\Presentation\SexyUI\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\prdora\source\repos\StudenManagementDemo\Src\Presentation\SexyUI\_Imports.razor"
using SexyUI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\prdora\source\repos\StudenManagementDemo\Src\Presentation\SexyUI\_Imports.razor"
using SexyUI.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\prdora\source\repos\StudenManagementDemo\Src\Presentation\SexyUI\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\prdora\source\repos\StudenManagementDemo\Src\Presentation\SexyUI\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\prdora\source\repos\StudenManagementDemo\Src\Presentation\SexyUI\Pages\Student.razor"
using SexyUI.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\prdora\source\repos\StudenManagementDemo\Src\Presentation\SexyUI\Pages\Student.razor"
using StudentManagementDemo.Core.Application.Students.Queries.GetStudentDetail;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\prdora\source\repos\StudenManagementDemo\Src\Presentation\SexyUI\Pages\Student.razor"
using Humanizer;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/student")]
    public partial class Student : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 64 "C:\Users\prdora\source\repos\StudenManagementDemo\Src\Presentation\SexyUI\Pages\Student.razor"
       

    private bool error = false;

    [Parameter]
    public ICollection<StudentDetailViewModel> StudentDetailCollection { get; set; }

    [Parameter]
    public bool ComponentLoading { get; set; }

    [Parameter]
    public int OneOrMany { get; set; }

    private async Task UpdateStudentAsync(Guid id, string name, string email)
    {
        error = false;
        ComponentLoading = true;
        //StudentDetailCollection = null;

        try
        {
            var studentId = await StudentService.UpdateStudentDetailsAsync(id, name, email);

            if (studentId == null)
            {
                error = true;
                throw new Exception($"Could not update {name}.");
            }

            error = false;

            //
            if (OneOrMany == 1)
            {

                // Get student details.
                var studentDetails = await StudentService.GetStudentDetailsByIdAsync(id);

                // Recreate collection.
                StudentDetailCollection = new List<StudentDetailViewModel>();
                // Add to collection.
                StudentDetailCollection.Add(studentDetails);
            }
            else
            {
                // Get student details.
                var allStudentDetails = await StudentService.GetAllStudentDetailsAsync();

                // Recreate collection.
                StudentDetailCollection = new List<StudentDetailViewModel>();
                // Add to collection.
                StudentDetailCollection = allStudentDetails;
            }

            toastService.ShowSuccess($"{name} updated.");
        }
        catch (Exception ex)
        {
            error = true;
            toastService.ShowError(ex.Message);
        }

        ComponentLoading = false;
    }

    private async Task DeleteStudentAsync(Guid id, string name)
    {
        error = false;
        ComponentLoading = true;
        //StudentDetailCollection = null;

        try
        {
            var deleted = await StudentService.DeleteStudentAsync(id);

            if (!deleted)
            {
                error = true;
                throw new Exception($"Could not delete {name}.");
            }

            error = false;

            //
            if (OneOrMany == 1)
            {

                // Get student details.
                var studentDetails = await StudentService.GetStudentDetailsByIdAsync(id);

                // Recreate collection.
                StudentDetailCollection = new List<StudentDetailViewModel>();
                // Add to collection.
                StudentDetailCollection.Add(studentDetails);
            }
            else
            {
                // Get student details.
                var allStudentDetails = await StudentService.GetAllStudentDetailsAsync();

                // Recreate collection.
                StudentDetailCollection = new List<StudentDetailViewModel>();
                // Add to collection.
                StudentDetailCollection = allStudentDetails;
            }

            toastService.ShowSuccess($"{name} deleted.");
        }
        catch (Exception ex)
        {
            error = true;
            toastService.ShowError(ex.Message);
        }

        ComponentLoading = false;
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private StudentService StudentService { get; set; }
    }
}
#pragma warning restore 1591
